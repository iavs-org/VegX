% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mergeVegX.R
\name{mergeVegX}
\alias{mergeVegX}
\title{Merge Veg-X documents}
\usage{
mergeVegX(
  x,
  y,
  allowMergePlots = FALSE,
  allowMergeOrganismIdentities = FALSE,
  verbose = TRUE
)
}
\arguments{
\item{x, y}{The objects of class \code{\linkS4class{VegX}} to be merged.}

\item{allowMergePlots}{If \code{TRUE} plots should be merged when sharing the same plotName and, if defined, plotUniqueIdentifier. 
If \code{FALSE} plots are never merged (i.e. the two VegX documents are considered as coming from different vegetation data sources).}

\item{allowMergeOrganismIdentities}{If \code{TRUE}, allows organism identities sharing the same organismName to be merged. 
If \code{FALSE} organism identities are never merged (i.e. the two VegX documents are considered as coming from different vegetation data sources).}

\item{verbose}{A flag to indicate console output of the data integration process.}
}
\value{
An object of class \code{\linkS4class{VegX}} with the pooled data
}
\description{
Merges two Veg-X documents while considering that some of their entities may be shared.
}
\details{
Some entities are attempted to be merged or are kept as separate entities depeding on their definition:
\itemize{
  \item \code{projects} are merged when their element \code{title} has the same value.
  \item \code{plots} are merged, if \code{allowMergePlots = TRUE}, when they have the same value for element \code{plotName} and, if defined, 
  \code{plotUniqueIdentifier} are also equal.
  \item \code{plotObservations} are merged when both their \code{plotID} and \code{obsStartDate} elements have the same value
  \item \code{organismIdentities} are merged if they share the same organismName and \code{allowMergeOrganismIdentities = TRUE} because
  one can have the same name used in different data sets but referring to different concepts.
  \item \code{methods} are merged when their element \code{name} has the same value.
  \item \code{strata} are merged when their element \code{stratumName} has the same value and the corresponding method has the same \code{name}.
  \item \code{stratumObservations} are merged when both their \code{stratumID} and \code{plotObservationID} elements have the same value.
  \item \code{aggregateOrganismObservations} are merged when their \code{plotObservationID} and \code{organismIdentityID} (and \code{stratumObservationID}, if defined) have the same value
  \item \code{individualOrganisms} are merged when both their \code{plotID} and \code{individualOrganismLabel} have the same value.
  \item \code{individualOrganismObservations} are merged when both their \code{plotObservationID} and \code{individualOrganismID} have the same value.
  \item \code{surfaceTypes} are merged when their element \code{surfaceName} has the same value and the corresponding method has the same \code{name}.
  \item \code{surfaceCoverObservations} are merged when both their \code{surfaceTypeID} and \code{plotObservationID} elements have the same value
  \item \code{siteObservations} are merged into the same element when their element \code{plotObservationID} has the same value, but particular measurements are always added
  as if they were distinct pieces of information.
}
Merging to these entities may cause interruption of the process if the two entities to be merged
have different value for the same element. Other entities (e.g., \code{attributes} of a method) are always considered as distinct
entities between the two data sets to be merged and hence are simply copied to the result.
}
\examples{

data(mokihinui)

# Create document 'x' with aggregate taxon observations
taxmapping = list(plotName = "Plot", obsStartDate = "PlotObsStartDate",
              taxonName = "NVSSpeciesName",
              stratumName = "Tier", cover = "Category")
coverscale = defineOrdinalScaleMethod(name = "Recce cover scale",
               description = "Recce recording method by Hurst/Allen",
               subject = "plant cover",
               citation = "Hurst, JM and Allen, RB. (2007) 
                   The Recce method for describing New Zealand vegetation – Field protocols. 
                   Landcare Research, Lincoln.",
               codes = c("P","1","2","3", "4", "5", "6"),
               quantifiableCodes = c("1","2","3", "4", "5", "6"),
               breaks = c(0, 1, 5, 25, 50, 75, 100),
               midPoints = c(0.05, 0.5, 15, 37.5, 62.5, 87.5),
               definitions = c("Presence", "<1\%", "1-5\%","6-25\%", "26-50\%", 
                                   "51-75\%", "76-100\%"))
strataDef = defineMixedStrata(name = "Recce strata",
               description = "Standard Recce stratum definition",
               citation = "Hurst, JM and Allen, RB. (2007) 
                 The Recce method for describing New Zealand vegetation – Field protocols. 
                 Landcare Research, Lincoln.",
               heightStrataBreaks = c(0, 0.3,2.0,5, 12, 25, 50),
               heightStrataNames = paste0("Tier ",1:6),
               categoryStrataNames = "Tier 7",
               categoryStrataDefinition = "Epiphytes")
x = addAggregateOrganismObservations(newVegX(), moki_tcv, taxmapping,
               methods = c(cover=coverscale),
               stratumDefinition = strataDef)

# Create document 'y' with tree observations
treemapping = list(plotName = "Plot", subPlotName = "Subplot", obsStartDate = "PlotObsStartDate",
                   taxonName = "NVSSpeciesName", diameterMeasurement = "Diameter")
diamMeth = predefinedMeasurementMethod("DBH/cm")
y = addIndividualOrganismObservations(newVegX(), moki_dia, treemapping,
                   methods = c(diameterMeasurement = diamMeth))

# Merge 'x' and 'y' while keeping plots of the same name separate and
# organism identities that have the same name separated. This default behaviour
# is set assuming that 'x' and 'y' come from different data sources.
z1 = mergeVegX(x,y)
summary(z1)

# Merge 'x' and 'y' while allowing plots of the same name to be merged
# and organism identities that have the same name to be merged. This configuration
# should be used when merging two VegX objects that come from the same data source 
# (i.e. Mokihinui data)
z2 = mergeVegX(x,y, allowMergePlots = TRUE,
               allowMergeOrganismIdentities = TRUE)
summary(z2)

}
\seealso{
\code{\linkS4class{VegX}}
}
